name: release
on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  build-release:
    name: Build Release
    runs-on: windows-2022

    steps:
    - name: Print installed Windows SDK versions
      shell: pwsh
      continue-on-error: true
      run: Get-ChildItem -Name "HKLM:\SOFTWARE\Microsoft\Windows Kits\Installed Roots"

    - name: Add MSBuild to the PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure libxml2 build
      run: 3rdparty\libxml2-2.9.10\win32\configure.bat

    - name: Build 32-bit binary
      run: msbuild /m /p:Configuration=Release /p:Platform=x86 build\foo_openlyrics.sln

    - name: Build 64-bit binary
      run: msbuild /m /p:Configuration=Release /p:Platform=x64 build\foo_openlyrics.sln

    - name: Pack binary into archive
      shell: bash
      run: |
        release_version="${GITHUB_REF#refs/tags/}"
        release_name="foo_openlyrics-${release_version}"
        echo "Release version ${release_version}"
        mkdir -p build_component_staging\x64
        pushd build_component_staging
        cp "..\build\Release\foo_openlyrics.dll" "."
        cp "..\build\x64\Release\foo_openlyrics.dll" "x64\"
        7z a -tzip "..\${release_name}.fb2k-component" "."
        popd
        mkdir -p build_symbols_staging\x86
        mkdir -p build_symbols_staging\x64
        pushd build_symbols_staging
        cp "..\build\Release\foo_openlyrics.dll" "x86\"
        cp "..\build\Release\foo_openlyrics.pdb" "x86\"
        cp "..\build\x64\Release\foo_openlyrics.dll" "x64\"
        cp "..\build\x64\Release\foo_openlyrics.pdb" "x64\"
        7z a "..\${release_name}-with_debug_symbols.zip" "."
        popd
        echo "RELEASE_VERSION=${release_version}" >> $GITHUB_ENV
        echo "RELEASE_NAME=${release_name}" >> $GITHUB_ENV

    - name: Create GitHub release
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: ${{ env.RELEASE_VERSION }}

    - name: Upload component archive
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ${{ env.RELEASE_NAME }}.fb2k-component
        asset_name: ${{ env.RELEASE_NAME }}.fb2k-component
        asset_content_type: application/octet-stream

    - name: Upload debug symbols
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ${{ env.RELEASE_NAME }}-with_debug_symbols.zip
        asset_name: ${{ env.RELEASE_NAME }}-with_debug_symbols.zip
        asset_content_type: application/octet-stream
